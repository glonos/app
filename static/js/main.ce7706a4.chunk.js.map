{"version":3,"sources":["Message.js","Messages.js","../../src/glonos.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","margin","Message","props","classes","message","timestamp","_React$useState","React","useState","_React$useState2","Object","slicedToArray","expanded","setExpanded","console","log","title","content","size","length","d","slice","Date","react_default","a","createElement","Card","className","CardHeader","subheader","toDateString","toLocaleTimeString","CardContent","Typography","component","IconButton","onClick","aria-expanded","aria-label","ExpandMore_default","width","Messages","glonos","location","_useState","_useState2","messages","setMessages","_useState3","_useState4","maxMessages","setMaxMessages","useEffect","find","then","results","sort","b","handle","setInterval","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","clearInterval","map","data","i","src_Message","key","glonos_Glonos","Glonos","iota","classCallCheck","this","_iota","createClass","value","latlon_geohash","encode","lat","long","_hashLocation","_generate","TAG","GEOHASH","DATA","MESSAGE","transfers","trytes","locationTag","JSON","stringify","address","tag","out_src","prepareTransfers","abrupt","sendTrytes","_x","_x2","_x3","apply","arguments","bundle","parse","extract_json_src","_find","_callee2","hash","hashes","bundles","_hash","_this","_context2","findTransactions","tags","t0","pop","getBundle","push","t1","_decode","_x4","getModalStyle","top","concat","left","transform","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","outline","App","composeAPI","provider","setLocation","open","setOpen","modalStyle","_useState5","_useState6","setTitle","_useState7","_useState8","setContent","_useState9","_useState10","sending","setSending","_useState11","undefined","_useState12","geolocation","setGeolocation","handleClose","navigator","getCurrentPosition","_ref","pos","coords","latitude","longitude","_ref2","_callee3","_context3","Modal","aria-labelledby","aria-describedby","onClose","style","TextField","id","label","onChange","event","target","variant","multiline","rowsMax","Fab","color","_send","generate","send","CircularProgress","Send_default","src_Messages","Add_default","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce7706a4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: 5\r\n  },\r\n});\r\n\r\nfunction Message(props) {\r\n  const classes = useStyles();\r\n  const { message, timestamp } = props;\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  console.log(message)\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n  const { title, content, } = message;\r\n  const size = content.length;\r\n  const summary = size > 200 ? content.slice(0, 200) + \"...\" : content;\r\n  const d = new Date(timestamp * 1000);\r\n  return (\r\n\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        title={title || 'no title'}\r\n        subheader={d.toDateString() + ' ' + d.toLocaleTimeString()}\r\n      />\r\n      <CardContent>\r\n        {expanded ?\r\n          <Typography component=\"p\">\r\n            {content || 'no content'}\r\n          </Typography> :\r\n\r\n          <Typography component=\"p\">\r\n            {content.slice(0, 200) + \"...\" || 'no content'}\r\n          </Typography>\r\n        }\r\n      </CardContent>\r\n      {size > 200 && <IconButton\r\n        onClick={handleExpandClick}\r\n        aria-expanded={expanded}\r\n        aria-label=\"Show more\"\r\n      >\r\n        <ExpandMoreIcon />\r\n      </IconButton>}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Message;","import React, { useState, useEffect } from 'react';\r\nimport Message from './Message'\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '50%'\r\n  },\r\n});\r\n\r\nfunction Messages(props) {\r\n  const classes = useStyles();\r\n\r\n  const { glonos, location } = props;\r\n  const [messages, setMessages] = useState([]);\r\n  const [maxMessages, setMaxMessages] = useState(5);\r\n\r\n  function handleExpandClick() {\r\n    setMaxMessages(maxMessages + 5);\r\n  }\r\n  useEffect(() => {\r\n    if (location !== \"\")\r\n      glonos.find(location).then(results => {\r\n\r\n        results.sort((a, b) => b.timestamp - a.timestamp)\r\n        setMessages(results);\r\n      });\r\n    const handle = setInterval(async () => {\r\n      if (location !== \"\") {\r\n        const results = await glonos.find(location);\r\n        results.sort((a, b) => b.timestamp - a.timestamp)\r\n        setMessages(results);\r\n\r\n      }\r\n    }, 10000);\r\n\r\n\r\n    return () => { clearInterval(handle) }\r\n  }, [location]);\r\n\r\n  const renderItems = () => {\r\n    return messages.map((data, i) => <Message key={i} message={data.message} timestamp={data.timestamp} />).slice(0, maxMessages)\r\n  }\r\n\r\n  return (<div className={classes.root}>\r\n    {messages.length === 0 ? \"LOADING\" : renderItems()}\r\n\r\n    {maxMessages < messages.length && <IconButton\r\n      onClick={handleExpandClick}\r\n      aria-label=\"Show more\"\r\n    >\r\n      <ExpandMoreIcon />\r\n    </IconButton>\r\n    }\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Messages","import _regeneratorRuntime from \"C:\\\\Users\\\\marcu\\\\Documents\\\\Code\\\\TypeScript\\\\GeoChat\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\marcu\\\\Documents\\\\Code\\\\TypeScript\\\\GeoChat\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\marcu\\\\Documents\\\\Code\\\\TypeScript\\\\GeoChat\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\marcu\\\\Documents\\\\Code\\\\TypeScript\\\\GeoChat\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { asciiToTrytes } from '@iota/converter';\nimport { extractJson } from '@iota/extract-json';\nimport Geohash from 'latlon-geohash';\nvar ROOT = 'ABCDEFGABCDEFG999AAAA999999999999999999999999999999999999999999999999999999999999';\nvar ADDRESS = 'GEOMURAL9999999999999999999999999999999999999999999999999999999999999999999999999';\nvar DEPTH = 3;\nvar WEIGHTMAGNITUDE = 14;\nexport var Glonos =\n/*#__PURE__*/\nfunction () {\n  function Glonos(iota) {\n    _classCallCheck(this, Glonos);\n\n    this._iota = iota;\n  }\n\n  _createClass(Glonos, [{\n    key: \"_hashLocation\",\n    value: function _hashLocation(location) {\n      return Geohash.encode(location.lat, location.long, 12);\n    }\n  }, {\n    key: \"locationTag\",\n    value: function locationTag(location) {\n      return this._hashLocation(location).slice(0, 6);\n    }\n  }, {\n    key: \"generate\",\n    value: function () {\n      var _generate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(location, title, content) {\n        var TAG, GEOHASH, DATA, MESSAGE, transfers, trytes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                TAG = this.locationTag(location);\n                GEOHASH = this._hashLocation(location);\n                DATA = {\n                  title: title,\n                  content: content,\n                  location: GEOHASH\n                };\n                MESSAGE = JSON.stringify({\n                  message: DATA\n                });\n                transfers = [{\n                  address: ADDRESS,\n                  value: 0,\n                  tag: asciiToTrytes(TAG),\n                  message: asciiToTrytes(MESSAGE)\n                }];\n                _context.next = 7;\n                return this._iota.prepareTransfers(ROOT, transfers);\n\n              case 7:\n                trytes = _context.sent;\n                return _context.abrupt(\"return\", this._iota.sendTrytes(trytes, DEPTH, WEIGHTMAGNITUDE));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function generate(_x, _x2, _x3) {\n        return _generate.apply(this, arguments);\n      }\n\n      return generate;\n    }()\n  }, {\n    key: \"_decode\",\n    value: function _decode(bundle) {\n      var data = JSON.parse(extractJson(bundle));\n      data.timestamp = bundle[0].timestamp;\n      return data;\n    }\n  }, {\n    key: \"find\",\n    value: function () {\n      var _find = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(hash) {\n        var _this = this;\n\n        var TAG, hashes, bundles, _hash, bundle;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                hash = hash.slice(0, 6);\n                TAG = asciiToTrytes(hash);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return this._iota.findTransactions({\n                  tags: [TAG]\n                });\n\n              case 5:\n                hashes = _context2.sent;\n                _context2.next = 12;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.log(_context2.t0);\n                return _context2.abrupt(\"return\", []);\n\n              case 12:\n                bundles = [];\n\n              case 13:\n                _hash = hashes.pop();\n                _context2.prev = 14;\n                _context2.next = 17;\n                return this._iota.getBundle(_hash);\n\n              case 17:\n                bundle = _context2.sent;\n                bundles.push(bundle);\n                _context2.next = 23;\n                break;\n\n              case 21:\n                _context2.prev = 21;\n                _context2.t1 = _context2[\"catch\"](14);\n\n              case 23:\n                if (hashes.length > 0) {\n                  _context2.next = 13;\n                  break;\n                }\n\n              case 24:\n                return _context2.abrupt(\"return\", bundles.map(function (b) {\n                  return _this._decode(b);\n                }));\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 8], [14, 21]]);\n      }));\n\n      function find(_x4) {\n        return _find.apply(this, arguments);\n      }\n\n      return find;\n    }()\n  }]);\n\n  return Glonos;\n}();","import React, { useState, useEffect } from 'react';\nimport Messages from './Messages'\nimport './App.css';\nimport { Glonos } from 'glonos'\nimport { composeAPI } from '@iota/core'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport SendIcon from '@material-ui/icons/Send';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 4),\n    outline: 'none',\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n\n  const glonos = new Glonos(composeAPI({ provider: 'https://nodes.thetangle.org:443' }));\n\n  const [location, setLocation] = useState('');\n  const [open, setOpen] = useState(false);\n  const [modalStyle] = React.useState(getModalStyle);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [sending, setSending] = useState(false);\n  const [geolocation, setGeolocation] = useState(undefined);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSend = () => {\n    async function send() {\n      setSending(true);\n      await glonos.generate({ lat: geolocation.latitude, long: geolocation.longitude }, title, content);\n      setSending(false);\n      handleClose();\n    }\n\n    send();\n  }\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async pos => {\n        const data = glonos.locationTag({ lat: pos.coords.latitude, long: pos.coords.longitude })\n        setLocation(data);\n        setGeolocation(pos.coords);\n      })\n    }\n    const handle = setInterval(() => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async pos => {\n          const data = glonos.locationTag({ lat: pos.coords.latitude, long: pos.coords.longitude })\n          if (location !== data) {\n\n            setLocation(data)\n            setGeolocation(pos.coords);\n          }\n        })\n      }\n    }, 5000);\n\n    return () => {\n      clearInterval(handle);\n    }\n\n  }, [glonos, location])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={open}\n          onClose={handleClose}\n        >\n\n          <div style={modalStyle} className={classes.paper}>\n            <div>\n              <TextField\n                id=\"outlined-name\"\n                label=\"Title\"\n                //className={classes.textField}\n                value={title}\n                onChange={(event) => { setTitle(event.target.value) }}\n                margin=\"normal\"\n\n                variant=\"outlined\"\n              />\n            </div>\n            <div>\n\n              <TextField\n                id=\"outlined-name\"\n                label=\"Content\"\n                //className={classes.textField}\n                value={content}\n                onChange={(event) => { setContent(event.target.value) }}\n                margin=\"normal\"\n                variant=\"outlined\"\n                multiline\n                rowsMax=\"4\"\n              />\n\n            </div>\n            <Fab color=\"primary\" aria-label=\"Send\" onClick={handleSend}>\n              {sending ? <CircularProgress /> :\n                <SendIcon />\n              }\n            </Fab>\n\n\n          </div>\n        </Modal>\n        <Messages glonos={glonos} location={location} />\n        <Fab color=\"primary\" aria-label=\"Add\" onClick={handleOpen}>\n          <AddIcon />\n        </Fab>\n        <p>\n          Your location is {location}\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}